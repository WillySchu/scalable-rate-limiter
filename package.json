{
  "name": "scalable-rate-limiter",
  "version": "1.0.6",
  "description": "A rate limiter that uses redis to horizontally scale across servers. It allows a user to set the number of tokens per user per timeframe. What seperates this package from the rest is it race-condition safe since it uses a LUA for atomic funcs",
  "main": "index.js",
  "scripts": {
    "test": "./node_modules/mocha/bin/mocha --reporter spec"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/metricstory/scalable-rate-limiter.git"
  },
  "keywords": [
    "ratelimiter",
    "rate",
    "rate",
    "limiting",
    "rate",
    "limiting",
    "api",
    "throttle",
    "apithrottle",
    "googleanalytics",
    "analytics",
    "google",
    "twitterapi"
  ],
  "author": "will@metricstory.com & brandon@metricstory.com",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/metricstory/scalable-rate-limiter/issues"
  },
  "homepage": "https://github.com/metricstory/scalable-rate-limiter#readme",
  "dependencies": {
    "fs": "0.0.1-security",
    "moment": "^2.17.*",
    "moment-timezone": "^0.5.*"
  },
  "devDependencies": {
    "chai": "^3.5.*",
    "mocha": "^3.2.*",
    "redis": "^2.6.*"
  }
}
